package com.whitecoats.adapter

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Context
import android.content.Intent
import android.content.SharedPreferences
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.view.ViewTreeObserver.OnGlobalLayoutListener
import android.widget.*
import androidx.recyclerview.widget.RecyclerView
import co.mobiwise.materialintro.shape.Focus
import co.mobiwise.materialintro.shape.FocusGravity
import co.mobiwise.materialintro.shape.ShapeType
import co.mobiwise.materialintro.view.MaterialIntroView
import com.whitecoats.clinicplus.MyClinicGlobalClass
import com.whitecoats.clinicplus.PatientListClickListner
import com.whitecoats.clinicplus.R
import com.whitecoats.clinicplus.SettingsFormActivity
import com.whitecoats.clinicplus.activities.EMRActivity
import com.whitecoats.clinicplus.apis.ApiUrls
import com.whitecoats.clinicplus.utils.SharedPref
import com.whitecoats.fragments.PatientFragment.Companion.isMoreData
import com.whitecoats.model.AppointmentSlotListModel
import com.whitecoats.model.PatientPListModel
import com.zoho.salesiqembed.ZohoSalesIQ

class PatientPListAdapter(
    private var patientPListModelList: List<PatientPListModel>,
    var doctorServiceArrayList: List<AppointmentSlotListModel>,
    var sharedPref: SharedPref?,
    var activity: Activity,
    private var patientListner: PatientListClickListner,
) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {

    private val TYPE_HEADER = 0
    private val TYPE_ITEM = 1
    private val TYPE_FOOTER = 2
    lateinit var footerHolder: FooterViewHolder
    private var appPreference: SharedPreferences =
        activity.getSharedPreferences(ApiUrls.appSharedPref, Context.MODE_PRIVATE)
    private lateinit var context: Context

    companion object {
        var isPatientProfileClicked = false
    }


    override fun onCreateViewHolder(viewGroup: ViewGroup, i: Int): RecyclerView.ViewHolder {
        when (i) {
            TYPE_ITEM -> {
                val view = LayoutInflater.from(viewGroup.context)
                    .inflate(R.layout.list_row_patient_list, viewGroup, false)
                context = viewGroup.context
                return MyViewHolder(view)
            }
            TYPE_HEADER -> {
                val view = LayoutInflater.from(viewGroup.context)
                    .inflate(R.layout.list_row_patient_list, viewGroup, false)
                context = viewGroup.context
                return MyViewHolder(view)
            }
            TYPE_FOOTER -> {
                val view = LayoutInflater.from(viewGroup.context)
                    .inflate(
                        R.layout.activity_path_orderview_footer,
                        viewGroup, false
                    )
                return FooterViewHolder(view)
            }
            else -> throw RuntimeException("there is no type that matches the type $i + make sure your using types correctly")
        }
    }

    @SuppressLint("SetTextI18n", "NotifyDataSetChanged")
    override fun onBindViewHolder(
        myViewHolder: RecyclerView.ViewHolder,
        @SuppressLint("RecyclerView") i: Int,
    ) {
        myViewHolder.itemView.tag = patientPListModelList[i]
        if (myViewHolder is MyViewHolder) {
            val patientPListModel = patientPListModelList[i]
            myViewHolder.patientName.text = patientPListModel.getPatientName()
            myViewHolder.patientPhNo.text = patientPListModel.getPhNo()
            /*New Registration(Autogenerated ID) changes for Gastro interface*/
                if (patientPListModel.getGeneralID() != null && !patientPListModel.getGeneralID()
                        .equals("", ignoreCase = true)
                ) {
                    myViewHolder.tvPatientGenId.visibility = View.VISIBLE
                    myViewHolder.tvPatientGenId.text = patientPListModel.getGeneralID()
                } else {
                    myViewHolder.tvPatientGenId.visibility = View.GONE
                }


            if (patientPListModel.roleId == 5) {
                myViewHolder.patientRole.text = "Internal"
            } else if (patientPListModel.roleId == 4 || patientPListModel.roleId == 6) {
                myViewHolder.patientRole.text = "Registered"
            }

            if (patientPListModel.isMoreOptionClicked == 1) {
                myViewHolder.details.visibility = View.VISIBLE
                myViewHolder.bookServiceLayout.visibility = View.VISIBLE
                myViewHolder.noServiceEmptyText.visibility = View.GONE
                myViewHolder.setUpService.visibility = View.GONE
                if (doctorServiceArrayList.isNotEmpty()) {
                    myViewHolder.searchPageBookVideo.visibility = View.GONE
                    myViewHolder.searchPageBookChat.visibility = View.GONE
                    myViewHolder.searchPageBookClinic.visibility = View.GONE
                    for (i1 in doctorServiceArrayList.indices) {
                        if (doctorServiceArrayList[i1].appointmentServiceID == 1 && doctorServiceArrayList[i1].appointmentServiceName.equals(
                                "Video",
                                ignoreCase = true
                            )
                        ) {
                            if (doctorServiceArrayList[i1].serviceStatus == 1) {
                                myViewHolder.searchPageBookVideo.visibility = View.VISIBLE
                            } else {
                                myViewHolder.searchPageBookVideo.visibility = View.GONE
                            }
                        }
                        if (doctorServiceArrayList[i1].appointmentServiceID == 1 && doctorServiceArrayList[i1].appointmentServiceName.equals(
                                "Instant Video",
                                ignoreCase = true
                            )
                        ) {
                            myViewHolder.searchPageBookInstantV.visibility = View.VISIBLE
                        }
                        if (doctorServiceArrayList[i1].appointmentServiceID == 2) {
                            if (patientPListModel.roleId == 5) {
                                myViewHolder.searchPageBookChat.visibility = View.GONE
                            } else {
                                if (doctorServiceArrayList[i1].serviceStatus == 1) {
                                    myViewHolder.searchPageBookChat.visibility = View.VISIBLE
                                } else {
                                    myViewHolder.searchPageBookChat.visibility = View.GONE
                                }
                            }
                        }
                        if (doctorServiceArrayList[i1].appointmentServiceID == 3) {
                            if (doctorServiceArrayList[i1].serviceStatus == 1) {
                                myViewHolder.searchPageBookClinic.visibility = View.VISIBLE
                            } else {
                                myViewHolder.searchPageBookClinic.visibility = View.GONE
                            }
                        }
                        if (doctorServiceArrayList[i1].instantVideoJsonObject != null) {
                            myViewHolder.searchPageBookInstantV.visibility = View.VISIBLE
                        }
                    }
                } else {
                    myViewHolder.bookServiceLayout.visibility = View.GONE
                    myViewHolder.noServiceEmptyText.visibility = View.VISIBLE
                    myViewHolder.noServiceEmptyText.text = "You have not created any service yet"
                    myViewHolder.setUpService.visibility = View.VISIBLE
                }
            } else {
                myViewHolder.details.visibility = View.GONE
            }
            if (sharedPref!!.isPrefExists("EMR")) {
                myViewHolder.llParentNotes.visibility = View.VISIBLE
                myViewHolder.viewNotes!!.visibility = View.VISIBLE
            } else {
                myViewHolder.llParentNotes.visibility = View.GONE
                myViewHolder.viewNotes!!.visibility = View.GONE
            }

            myViewHolder.more.setOnClickListener {

                MyClinicGlobalClass.logUserActionEvent(
                    ApiUrls.doctorId,
                    activity.getString(R.string.PatientMore),
                    null
                )
                if (myViewHolder.details.visibility == View.VISIBLE) {
                    myViewHolder.details.visibility = View.GONE
                    patientPListModel.isMoreOptionClicked = 0
                } else {
                    myViewHolder.bookServiceLayout.requestLayout()
                    myViewHolder.details.visibility = View.VISIBLE
                    patientPListModel.isMoreOptionClicked = 1
                }
                notifyDataSetChanged()
            }

            if (myViewHolder.searchPageBookVideo.visibility == View.VISIBLE
                || myViewHolder.searchPageBookClinic.visibility == View.VISIBLE
            ) {
                myViewHolder.llRow1!!.visibility = View.VISIBLE

            } else {
                myViewHolder.llRow1!!.visibility = View.GONE
            }
            if (myViewHolder.searchPageBookInstantV.visibility == View.VISIBLE
                || myViewHolder.searchPageBookChat.visibility == View.VISIBLE
            ) {
                myViewHolder.llRow2!!.visibility = View.VISIBLE

            } else {
                myViewHolder.llRow2!!.visibility = View.GONE
            }

            myViewHolder.patientListCallIcon.setOnClickListener { v ->
                patientListner.onItemClick(
                    v,
                    "",
                    patientPListModel.getPhNo(),
                    0,
                    0,
                    0,
                    0,
                    patientPListModel.patientId,
                    patientPListModel.getPatientName(),
                    null,
                    null
                )
            }

            myViewHolder.patientListPhoneNo.setOnClickListener { v ->
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Calling Patient")
                patientListner.onItemClick(
                    v,
                    "",
                    patientPListModel.getPhNo(),
                    0,
                    0,
                    0,
                    0,
                    patientPListModel.patientId,
                    patientPListModel.getPatientName(),
                    null,
                    null
                )
            }
            myViewHolder.searchPageBookVideo.setOnClickListener { v ->
                MyClinicGlobalClass.logUserActionEvent(
                    ApiUrls.doctorId,
                    activity.getString(R.string.PatientMoreVideo),
                    null
                )
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Book Video")
                patientListner.onItemClick(
                    v,
                    "",
                    "",
                    1,
                    0,
                    0,
                    0,
                    patientPListModel.patientId,
                    patientPListModel.getPatientName(),
                    null,
                    null
                )
            }
            myViewHolder.searchPageBookClinic.setOnClickListener { v ->
                MyClinicGlobalClass.logUserActionEvent(
                    ApiUrls.doctorId,
                    activity.getString(R.string.PatientMoreClinic),
                    null
                )
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Book Clinic")
                patientListner.onItemClick(
                    v,
                    "",
                    "",
                    0,
                    3,
                    0,
                    0,
                    patientPListModel.patientId,
                    patientPListModel.getPatientName(),
                    null,
                    null
                )
            }
            myViewHolder.searchPageBookInstantV.setOnClickListener { v ->
                MyClinicGlobalClass.logUserActionEvent(
                    ApiUrls.doctorId,
                    activity.getString(R.string.PatientMoreInstantVideo),
                    null
                )
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Book Instant Video")
                if (doctorServiceArrayList != null && doctorServiceArrayList.isNotEmpty()) {
                    val instantVideo =
                        doctorServiceArrayList[doctorServiceArrayList.size - 2].instantVideoJsonObject
                    val instantVideoInfo =
                        doctorServiceArrayList[doctorServiceArrayList.size - 1].instantVideoInfoJsonObject
                    patientListner.onItemClick(
                        v,
                        "",
                        "",
                        0,
                        0,
                        0,
                        0,
                        patientPListModel.patientId,
                        patientPListModel.getPatientName(),
                        instantVideo,
                        instantVideoInfo
                    )
                }
            }
            myViewHolder.searchPageBookChat.setOnClickListener { v ->
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Book Chat")
                patientListner.onItemClick(
                    v,
                    "",
                    "",
                    0,
                    0,
                    0,
                    2,
                    patientPListModel.patientId,
                    patientPListModel.getPatientName(),
                    null,
                    null
                )
            }

            myViewHolder.createNotes.setOnClickListener {
                MyClinicGlobalClass.logUserActionEvent(
                    ApiUrls.doctorId,
                    activity.getString(R.string.PatientMoreNotes),
                    null
                )
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Create Note")
                val intent = Intent(activity, EMRActivity::class.java)
                intent.putExtra("ApptId", 0)
                intent.putExtra("PatientId", patientPListModel.patientId)
                intent.putExtra("ApptMode", 0)
                intent.putExtra("ApptDate", "")
                intent.putExtra("ApptTime", "00:00:00")
                intent.putExtra("PatientName", patientPListModel.getPatientName())
                activity.startActivity(intent)
            }


            myViewHolder.header.setOnClickListener {
                MyClinicGlobalClass.logUserActionEvent(
                    ApiUrls.doctorId,
                    activity.getString(R.string.PatientInfoArrow),
                    null
                )
                isPatientProfileClicked = true
                ZohoSalesIQ.Tracking.setCustomAction("PatientList - Patient Profilee")
                val intent = Intent(activity, EMRActivity::class.java)
                intent.putExtra("ApptId", 0)
                intent.putExtra("PatientId", patientPListModel.patientId)
                intent.putExtra("ApptMode", 0)
                intent.putExtra("ApptDate", "")
                intent.putExtra("ApptTime", "00:00:00")
                intent.putExtra("PatientName", patientPListModel.getPatientName())
                activity.startActivity(intent)
            }

            myViewHolder.more.viewTreeObserver.addOnGlobalLayoutListener(object :
                OnGlobalLayoutListener {
                override fun onGlobalLayout() {
                    myViewHolder.more.viewTreeObserver.removeOnGlobalLayoutListener(this)
                    if (i == 0) {
                        showGuide(1, i, myViewHolder)
                    }
                }
            })

            myViewHolder.bookServiceLayout.viewTreeObserver.addOnGlobalLayoutListener(object :
                OnGlobalLayoutListener {
                override fun onGlobalLayout() {
                    if (myViewHolder.details.visibility == View.VISIBLE) {
                        showGuide(4, i, myViewHolder)
                        myViewHolder.bookServiceLayout.viewTreeObserver.removeOnGlobalLayoutListener(
                            this
                        )
                    }
                }
            })

            myViewHolder.setUpService.setOnClickListener {
                val intent = Intent(activity, SettingsFormActivity::class.java)
                intent.putExtra("FormType", 7)
                intent.putExtra("Title", activity.resources.getString(R.string.service_setup))
                activity.startActivity(intent)
            }

        } else if (myViewHolder is FooterViewHolder) {
            footerHolder = myViewHolder
            if (isMoreData && patientPListModelList.size >= 50) {
                myViewHolder.footerText.visibility =
                    View.VISIBLE
            } else {
                myViewHolder.footerText.visibility =
                    View.GONE
            }
            footerHolder.footerText.setOnClickListener { view ->
                patientListner.onItemClick(
                    view,
                    "LOADMORE",
                    "",
                    0,
                    0,
                    0,
                    0,
                    0,
                    "",
                    null,
                    null
                )
            }
        }

    }

    override fun getItemCount(): Int {
        return patientPListModelList.size
    }

    override fun getItemId(position: Int): Long {
        super.getItemId(position)
        return position.toLong()
    }

    override fun getItemViewType(position: Int): Int {
        if (isPositionHeader(position)) {
            return TYPE_HEADER
        } else if (isPositionFooter(position)) {
            return TYPE_FOOTER
        }
        return TYPE_ITEM
    }

    private fun isPositionFooter(position: Int): Boolean {
        return position >= patientPListModelList.size - 1 && patientPListModelList.size >= 50
    }


    private fun isPositionHeader(position: Int): Boolean {
        return position == 0
    }

    @SuppressLint("CutPasteId")
    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        var patientName: TextView
        var tvPatientGenId: TextView
        var patientPhNo: TextView
        var patientRole: TextView
        var patientListPhoneNo: TextView
        var noServiceEmptyText: TextView
        var header: RelativeLayout
        var details: LinearLayout
        var more: LinearLayout
        var arrowIcon: ImageView
        var patientListCallIcon: ImageView
        var searchPageBookVideo: LinearLayout
        var searchPageBookClinic: LinearLayout
        var searchPageBookInstantV: LinearLayout
        var searchPageBookChat: LinearLayout
        var createNotes: LinearLayout
        var bookServiceLayout: LinearLayout
        var setUpService: Button
        var llParentNotes: LinearLayout
        var viewNotes: View? = null
        var llRow1: LinearLayout? = null
        var llRow2: LinearLayout? = null

        init {
            tvPatientGenId = itemView.findViewById(R.id.tv_patient_general_id)
            patientName = itemView.findViewById(R.id.patientListPatientName)
            patientPhNo = itemView.findViewById(R.id.patientListPhoneNo)
            header = itemView.findViewById(R.id.patientListHeaderLayout)
            details = itemView.findViewById(R.id.patientListDetailLayout)
            arrowIcon = itemView.findViewById(R.id.patientListArrowIcon)
            more = itemView.findViewById(R.id.patientListMoreLayout)
            patientRole = itemView.findViewById(R.id.patientRole)
            patientListCallIcon = itemView.findViewById(R.id.patientListCallIcon)
            patientListPhoneNo = itemView.findViewById(R.id.patientListPhoneNo)
            searchPageBookVideo = itemView.findViewById(R.id.searchPageBookVideo)
            searchPageBookClinic = itemView.findViewById(R.id.searchPageBookClinic)
            searchPageBookInstantV = itemView.findViewById(R.id.searchPageBookInstantV)
            searchPageBookChat = itemView.findViewById(R.id.searchPageBookChat)
            createNotes = itemView.findViewById(R.id.createNotes)
            bookServiceLayout = itemView.findViewById(R.id.patientListBookServiceLayout)
            noServiceEmptyText = itemView.findViewById(R.id.searchPageBookEmptyText)
            setUpService = itemView.findViewById(R.id.patientListSetupService)
            llParentNotes = itemView.findViewById(R.id.ll_parent_notes)
            viewNotes = itemView.findViewById(R.id.view_notes)
            llRow1 = itemView.findViewById(R.id.ll_row1)
            llRow2 = itemView.findViewById(R.id.ll_row2)
        }
    }

    class FooterViewHolder(view: View) : RecyclerView.ViewHolder(view) {
        var footerText: TextView
        var bottomSpace: View

        init {
            footerText = view.findViewById(R.id.footer_text)
            bottomSpace = view.findViewById(R.id.bottomSpace)

        }

    }

    class HeaderViewHolder(var headerView: View) : RecyclerView.ViewHolder(headerView)

    private fun showGuide(
        section: Int,
        position: Int,
        myViewHolder: MyViewHolder,
    ) {
        if (position == 0) {
            when (section) {
                1 -> MaterialIntroView.Builder(context as Activity?)
                    .enableDotAnimation(true)
                    .enableIcon(false)
                    .dismissOnTouch(true)
                    .setFocusGravity(FocusGravity.CENTER)
                    .setFocusType(Focus.NORMAL)
                    .setDelayMillis(50)
                    .enableFadeAnimation(true)
                    .setInfoText("Find shortcuts to book appointments or create notes for your patients")
                    .setShape(ShapeType.CIRCLE)
                    .setTarget(myViewHolder.more)
                    .setUsageId("intro_patient_more") //THIS SHOULD BE UNIQUE ID
                    .setListener { }
                    .show()
                2 -> MaterialIntroView.Builder(context as Activity?)
                    .enableDotAnimation(true)
                    .enableIcon(false)
                    .dismissOnTouch(true)
                    .setFocusGravity(FocusGravity.CENTER)
                    .setFocusType(Focus.NORMAL)
                    .setDelayMillis(50)
                    .enableFadeAnimation(true)
                    .setInfoText("To know about your patient like profile, family details, records")
                    .setShape(ShapeType.CIRCLE)
                    .setTarget(myViewHolder.arrowIcon)
                    .setUsageId("intro_patient_arrow") //THIS SHOULD BE UNIQUE ID
                    .setListener { }
                    .show()
                3 -> MaterialIntroView.Builder(context as Activity?)
                    .enableDotAnimation(true)
                    .enableIcon(false)
                    .dismissOnTouch(true)
                    .setFocusGravity(FocusGravity.CENTER)
                    .setFocusType(Focus.NORMAL)
                    .setDelayMillis(50)
                    .enableFadeAnimation(true)
                    .setInfoText("To directly contact any of your patients on the go")
                    .setShape(ShapeType.RECTANGLE)
                    .setTarget(myViewHolder.patientPhNo)
                    .setUsageId("intro_patient_phone") //THIS SHOULD BE UNIQUE ID
                    .setListener { }
                    .show()
                4 -> if (!appPreference.getBoolean("PLBookAppt", false)) {
                    MaterialIntroView.Builder(context as Activity?)
                        .enableDotAnimation(true)
                        .enableIcon(false)
                        .dismissOnTouch(true)
                        .setFocusGravity(FocusGravity.CENTER)
                        .setFocusType(Focus.NORMAL)
                        .setDelayMillis(50)
                        .enableFadeAnimation(true)
                        .setInfoText("Select what type of appointment you want to have with your patient")
                        .setShape(ShapeType.RECTANGLE)
                        .setTarget(myViewHolder.bookServiceLayout)
                        .setUsageId("intro_patient_appointment") //THIS SHOULD BE UNIQUE ID
                        .setListener {
                            showGuide(5, position, myViewHolder)
                            val editor: SharedPreferences.Editor = appPreference.edit()
                            editor.putBoolean("PLBookAppt", true)
                            editor.apply()
                        }
                        .show()
                }
                5 -> MaterialIntroView.Builder(context as Activity?)
                    .enableDotAnimation(true)
                    .enableIcon(false)
                    .dismissOnTouch(true)
                    .setFocusGravity(FocusGravity.CENTER)
                    .setFocusType(Focus.NORMAL)
                    .setDelayMillis(50)
                    .enableFadeAnimation(true)
                    .setInfoText("Make a note for a patient to keep more information of your appointments")
                    .setShape(ShapeType.RECTANGLE)
                    .setTarget(myViewHolder.createNotes)
                    .setUsageId("intro_patient_appointment") //THIS SHOULD BE UNIQUE ID
                    .setListener { }
                    .show()
            }
        }
    }


}